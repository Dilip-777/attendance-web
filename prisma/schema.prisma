// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String
  mobileNumber String?
  password     String
  role         Role      @default(None)
  specialRole  Boolean   @default(false)
  accounts     Account[]
  sessions     Session[]
}

model SaveTimekeeper {
  id              String  @id
  contractorid    String?
  contractorname  String?
  employeeid      String
  employeename    String?
  designation     String
  attendancedate  String
  machineInTime   String
  machineOutTime  String?
  machineduration String?
  machineshift    String
  attendance      String
  overtime        Float   @default(0)
  eleave          String
  manualintime    String?
  manualouttime   String?
  manualduration  String?
  manualshift     String?
  manualovertime  Float?
  mleave          String?
  department      String?
  gender          String?
}

model TimeKeeper {
  id                   String    @id @default(cuid())
  contractorid         String?
  contractorname       String?
  employeeid           String
  employeename         String?
  designation          String
  attendancedate       String
  machineInTime        String
  machineOutTime       String?
  machineduration      String?
  machineshift         String
  attendance           String
  overtime             Float     @default(0)
  eleave               String
  manualintime         String?
  manualouttime        String?
  manualduration       String?
  manualshift          String?
  manualovertime       Float?
  mleave               String?
  department           String?
  gender               String?
  status               Status    @default(NoChanges)
  hrdatetime           String?
  freezed              Boolean   @default(false)
  comment              Comment[]
  approvedByTimekeeper Boolean   @default(false)
  UploadDocument       Upload[]

  @@unique([attendancedate, employeeid])
}

model Contractor {
  id                          String               @id @default(cuid())
  contractorname              String
  contractorId                String               @unique
  servicedetail               String
  supplierdetail              String
  officeaddress               String?
  contactperson               String
  designation                 String?
  telephonenumber             String?
  mobilenumber                String
  pancardno                   String?
  areaofwork                  String?
  emailid                     String?
  website                     String?
  expirationDate              String?
  servicecharge               Float?
  tds                         Float?
  gst                         Float?
  bankaccountnumber           String?
  ifscno                      String?
  beneficialname              String?
  gstin                       String?
  typeofcontractor            String?
  strategicbusinessunit       String?
  businessdetaildocument      String?
  uploadutilitybill           String?
  organisationtype            String?
  dateofincorporation         String?
  associationwithcompetitor   Boolean              @default(false)
  memorandam_of_associate     String?
  listofdirector              String?
  profileofkeyperson          String?
  competitorname              String?
  isocertified                Boolean              @default(false)
  turnoverlastyear            String?
  turnover2yearback           String?
  uploadbranchdetail          String?
  uploadreturndetail          String?
  uniquenumber                String?
  registration_number         String?
  first_registration_number   String?
  latest_mnth_gst1_filed      String?
  latest_mnth_gst2b_filed     String?
  comply_regulatory           Boolean              @default(false)
  upload_registration_cert    String?
  upload_licence1             String?
  upload_licence2             String?
  code_of_proprietor          String?
  list_major_product          String?
  qualty_control_procedure    String?
  valueadd_product            String?
  five_strength_points        String?
  weakness                    String?
  selection_training_method   String?
  delivery_procedure          String?
  clientele                   String?
  reference_organistaion_1    String?
  reference_contact_person_1  String?
  reference_designation_1     String?
  reference_contact_1         String?
  period_of_service_1         String?
  reference_organistaion_2    String?
  reference_contact_person_2  String?
  reference_designation_2     String?
  reference_contact_2         String?
  period_of_service_2         String?
  reference_organistaion_3    String?
  reference_contact_person_3  String?
  reference_designation_3     String?
  reference_contact_3         String?
  period_of_service_3         String?
  upload_list_ofclientele     String?
  upload_certificate_services String?
  upload_doc1                 String?
  upload_doc2                 String?
  salarymen8hr                Int                  @default(0)
  salarywomen8hr              Int                  @default(0)
  salarymen12hr               Int                  @default(0)
  salarysvr8hr                Int                  @default(0)
  salarysvr12hr               Int                  @default(0)
  deployment                  Boolean              @default(false)
  minManpower                 Boolean              @default(false)
  minHeadcount                Float                @default(0)
  workorderhighlights         String?
  employee                    Employee[]
  fixedValues                 FixedValues[]
  payments                    Payments[]
  safety                      Safety[]
  bills                       bills[]
  stores                      Stores[]
  barBending                  BarBending[]
  measurement                 Measurement[]
  workorders                  Workorder[]
  seperateSalary              SeperateSalary[]
  departments                 Department[]
  deductions                  Deductions[]
  gstRelease                  GstRelease[]
  fixedSalary                 FixedSalary[]
  vehicle                     Vehicle[]
  fixedVehicle                FixedVehicle[]
  hsd                         Hsd[]
  fixedworks                  FixedWork[]
  hiredFixedWork              HiredFixedWork[]
  saveHiredFixedWork          SaveHiredFixedWork[]
  finalCalculations           FinalCalculations[]
  Qcs                         Qcs[]
}

model bills {
  id             String     @id @default(cuid())
  contractorname String
  contractorId   String
  month          String
  amount         Int
  document       String
  contractor     Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model Employee {
  id                        String        @id @default(cuid())
  contractorname            String
  employeeId                String        @unique
  employeename              String
  employeecode              String        @default("")
  designationId             String?
  departmentId              String
  gender                    String
  phone                     String?
  emailid                   String?
  basicsalary_in_duration   String
  basicsalary               Int
  allowed_wrking_hr_per_day Int
  servicecharge             Float?
  gst                       Float?
  tds                       Float?
  contractorId              String
  contractor                Contractor    @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
  designation               Designations? @relation(fields: [designationId], references: [id], onDelete: Cascade)
  department                Department    @relation(fields: [departmentId], references: [id], onDelete: Cascade)
}

model FixedValues {
  id            String  @id @default(cuid())
  month         String
  contractorId  String
  serviceDetail String?

  areaOfWork        String?
  salarymen8hr      Int     @default(0)
  salarywomen8hr    Int     @default(0)
  salarymen12hr     Int     @default(0)
  salarysvr8hr      Int     @default(0)
  salarysvr12hr     Int     @default(0)
  gst               Int     @default(0)
  tds               Int     @default(0)
  gstValue          Int     @default(0)
  tdsValue          Int     @default(0)
  servicechargeRate Float   @default(0)
  servicecharge     Float   @default(0)
  mandays           Float   @default(0)
  othrs             Int     @default(0)
  deployment        Boolean @default(false)
  minManpower       Boolean @default(false)
  minHeadcount      Float   @default(0)
  billno            String?
  billdate          String?
  noofmanpower      Int     @default(0)

  otdays        Float @default(0)
  mandaysamount Int   @default(0)

  basicamount    Int @default(0)
  servicecharges Int @default(0)
  total          Int @default(0)
  billamount     Int @default(0)

  cost         Int                 @default(0)
  designations FixedDesignations[]
  departments  FixedDepartments[]
  contractor   Contractor          @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)

  @@unique([month, contractorId])
}

model Payments {
  id             String     @id @default(cuid())
  contractorId   String
  contractorName String
  month          String
  paymentdate    String
  paymentrefno   String
  netpayable     Int        @default(0)
  paidamount     Int        @default(0)
  contractor     Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model FixedDepartments {
  id             String @id @default(cuid())
  departmentId   String
  amount         Float  @default(0)
  mandays        Float  @default(0)
  servicecharges Float  @default(0)
  mandaysamount  Float  @default(0)

  fixedValuesId String
  department    Department  @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  fixedValues   FixedValues @relation(fields: [fixedValuesId], references: [id], onDelete: Cascade)
}

model FixedDesignations {
  id                        String @id @default(cuid())
  salary                    Int    @default(0)
  fixedValuesId             String
  designationId             String
  gender                    String
  designation               String
  allowed_wrking_hr_per_day Int

  servicecharge           Float?
  basicsalary_in_duration String
  fixedValues             FixedValues  @relation(fields: [fixedValuesId], references: [id], onDelete: Cascade)
  designations            Designations @relation(fields: [designationId], references: [id], onDelete: Cascade)
}

model HOAuditor {
  id                       String           @id @default(cuid())
  contractorId             String
  contractorname           String
  workDescription          String
  invoiceNo                String
  date                     String
  monthOfInvoice           String
  fromDate                 String
  toDate                   String
  dateOfReceiving          String?
  taxableAmount            Int              @default(0)
  tds                      Int              @default(0)
  basicbillamount          Int
  firstbillormonthly       String
  serviceCharges           Int
  totalbillAmount          Int
  netbillAmount            Int
  gst                      Int
  sapstatus                String?
  tdsstatus                String?
  gststatus                String?
  gstr1                    String?
  gstr3b                   String?
  wostatus                 String?
  remarks                  String?
  bankDetails              String
  onetimeInvoice           Boolean
  verifiedComplainces      Boolean
  workOrderAvailable       Boolean
  licensesInPlace          Boolean
  previousMonthPayReceived Boolean
  previousPayVerified      Boolean
  detailsSentToAuditAndHo  Boolean
  gstChallanAttached       Boolean
  deductions               String?
  variationsInManpower     String?
  manchineOrRegisterMode   String
  uploadDoc1               String?
  uploadDoc2               String?
  uploadDoc3               String?
  uploadDoc4               String?
  uploadDoc5               String?
  uploadDoc6               String?
  debitNotes               DebitNote[]
  otherDeductions          OtherDeduction[]
  otherAdditions           OtherAddition[]
}

model DebitNote {
  id          String @id @default(cuid())
  hoAuditorId String
  amount      Int    @default(0)
  gst         Int    @default(0)
  tds         Int    @default(0)
  netamount   Int    @default(0)

  remarks   String?
  hoAuditor HOAuditor @relation(fields: [hoAuditorId], references: [id], onDelete: Cascade)
}

model OtherDeduction {
  id          String    @id @default(cuid())
  hoAuditorId String
  label       String
  amount      Int       @default(0)
  remarks     String?
  hoAuditor   HOAuditor @relation(fields: [hoAuditorId], references: [id], onDelete: Cascade)
}

model OtherAddition {
  id          String    @id @default(cuid())
  hoAuditorId String
  label       String
  amount      Int       @default(0)
  remarks     String?
  hoAuditor   HOAuditor @relation(fields: [hoAuditorId], references: [id], onDelete: Cascade)
}

model payoutTracker {
  id                 String  @id @default(cuid())
  contractorId       String
  contractorName     String
  month              String
  amount             Int
  gst                Int
  tds                Int
  finalpayableamount Int
  deduction          Int     @default(0)
  actualpaidoutmoney Int     @default(0)
  balance            Int     @default(0)
  uploadreceipt      String?
}

model Workorder {
  id                String     @id @default(cuid())
  contractorId      String
  contractorName    String
  projectId         String?
  nature            String
  startDate         String
  endDate           String
  location          String
  workDescription   String
  workorderno       String?
  remarks           String?
  schedule          String?
  paymentTerms      String?
  repeatOrOneTime   String
  alert1Month       Boolean
  alert15days       Boolean
  amendmentDocument String?
  addendumDocument  String?
  uploadDocument    String?
  contractor        Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
  status            Status     @default(Pending)
  project           Project?   @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Department {
  id                      String             @id @default(cuid())
  department              String             @unique
  basicsalary_in_duration String?
  designations            Designations[]
  contractors             Contractor[]
  employees               Employee[]
  fixedDepartments        FixedDepartments[]
}

model Designations {
  id                        String              @id @default(cuid())
  designationid             String
  departmentId              String
  departmentname            String
  designation               String
  basicsalary               Int
  basicsalaryfor12hr        Int                 @default(0)
  gender                    String
  allowed_wrking_hr_per_day Int
  servicecharge             Float?
  basicsalary_in_duration   String              @default("Hourly")
  department                Department          @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  seperateSalary            SeperateSalary[]
  employees                 Employee[]
  fixedSalary               FixedSalary[]
  fixedDesignations         FixedDesignations[]
}

model SeperateSalary {
  id            String       @id @default(cuid())
  contractorId  String
  designationId String
  salary        Int
  contractor    Contractor   @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
  designation   Designations @relation(fields: [designationId], references: [id], onDelete: Cascade)
}

model FixedSalary {
  id            String       @id @default(cuid())
  contractorId  String
  designationId String
  month         String
  salary        Int
  contractor    Contractor   @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
  designation   Designations @relation(fields: [designationId], references: [id])

  @@unique([month, contractorId, designationId])
}

model Shifts {
  id         String @id @default(cuid())
  shift      String @unique
  totalhours Int
}

model Comment {
  id           String     @id @default(cuid())
  comment      String?
  userId       String
  userName     String
  approval     Boolean    @default(false)
  role         Role
  timekeeperId String
  changes      String?
  createdAt    DateTime   @default(now()) @updatedAt
  timekeeper   TimeKeeper @relation(fields: [timekeeperId], references: [id], onDelete: Cascade)
}

model Upload {
  id           String     @id @default(cuid())
  document     String
  userId       String
  userName     String
  docType      String?
  role         Role
  timekeeperId String
  timekeeper   TimeKeeper @relation(fields: [timekeeperId], references: [id], onDelete: Cascade)
}

model Stores {
  id             String      @id @default(cuid())
  month          String
  contractorid   String
  contractorName String
  storeItems     StoreItem[]
  totalAmount    Float
  contractor     Contractor  @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
}

model StoreItem {
  id                   String  @id @default(cuid())
  storeId              String
  division             String
  chargeableItemIssued String
  quantity             Float
  units                String
  rate                 Float
  chargeableamount     Float
  remarks              String?
  store                Stores  @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

model Safety {
  id             String       @id @default(cuid())
  month          String
  contractorid   String
  contractorName String
  safetyItems    SafetyItem[]
  unsafeActs     UnsafeActs[]
  totalAmount    Float
  contractor     Contractor   @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
}

model SafetyItem {
  id                   String  @id @default(cuid())
  safetyId             String
  division             String
  chargeableItemIssued String
  quantity             Float   @default(0)
  rate                 Float   @default(0)
  netchargeableamount  Float
  remarks              String?
  safety               Safety  @relation(fields: [safetyId], references: [id], onDelete: Cascade)
}

model UnsafeActs {
  id         String  @id @default(cuid())
  safetyId   String
  unsafeacts String
  division   String
  frequency  Int
  penalty    Int
  remarks    String?
  safety     Safety  @relation(fields: [safetyId], references: [id], onDelete: Cascade)
}

model GstRelease {
  id             String     @id @default(cuid())
  month          String
  contractorId   String
  contractorName String?
  invoiceMonth   String?
  invoiceDate    String?
  invoiceNo      String?
  gstin          String?
  gsthold        Int        @default(0)
  gstHoldDate    String?
  gstrelease     Int        @default(0)
  gstReleaseDate String?
  advance        Int        @default(0)
  anyother       Int        @default(0)
  addition       Int        @default(0)
  paidIn         String?
  remarks        String?
  contractor     Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model Deductions {
  id             String     @id @default(cuid())
  month          String
  contractorId   String
  contractorName String?
  gsthold        Int        @default(0)
  gstrelease     Int        @default(0)
  advance        Int        @default(0)
  anyother       Int        @default(0)
  addition       Int        @default(0)
  remarks        String?
  contractor     Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model Shift {
  id   String @id @default(cuid())
  name String @unique
  code String @unique
}

model Vehicle {
  id                     String         @id @default(cuid())
  contractorId           String
  vehicleNo              String
  vehicleType            String
  mileage                Float
  charges                Float
  paymentMode            String
  paymentStructure       String?
  rate                   String?
  shiftduraion           Int
  mainenanceTime         String?
  maintenanceDaysAllowed Int            @default(0)
  deployment             String
  eligibleForOvertime    Boolean        @default(false)
  hsdDeduction           Boolean        @default(false)
  hsdProvidedBy          String
  gst                    Float
  automobile             Automobile[]
  fixedVehicle           FixedVehicle[]
  contractor             Contractor     @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model FixedVehicle {
  id                     String     @id @default(cuid())
  contractorId           String
  vehicleId              String
  month                  String
  vehicleNo              String
  vehicleType            String
  mileage                Float
  charges                Float
  paymentMode            String
  paymentStructure       String?
  rate                   String?
  shiftduraion           Int
  mainenanceTime         String?
  maintenanceDaysAllowed Int        @default(0)
  deployment             String
  eligibleForOvertime    Boolean    @default(false)
  hsdDeduction           Boolean    @default(false)
  hsdProvidedBy          String
  gst                    Float
  vehicle                Vehicle    @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  contractor             Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model Hsd {
  id              String     @id @default(cuid())
  contractorId    String
  month           String
  recoverableRate Float
  payableRate     Float
  freeze          Boolean    @default(false)
  contractor      Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)
}

model Automobile {
  id                   String  @id @default(cuid())
  contractorId         String
  workorderId          String?
  vehicleId            String
  date                 String?
  openingMeterReading  Float?
  closingMeterReading  Float?
  startTime            String?
  endTime              String?
  totalRunning         Float?
  totalRunningTime     String?
  hsdIssuedOrConsumed  Float?
  maintenanceDays      Float?
  breakDownDaysCounted Float?
  trips                Float?
  idealStandingDays    Float?
  remarks              String?
  status               Status  @default(Pending)
  rejectionReason      String?
  freeze               Boolean @default(false)
  vehicle              Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

  @@unique([date, contractorId, vehicleId])
}

model FinalCalculations {
  id             String     @id @default(cuid())
  contractorId   String
  month          String
  hiringCharged  Float
  hsdConsumed    Float
  hsdRateCharged Float
  hsdCost        Float
  totalCost      Float
  contractor     Contractor @relation(fields: [contractorId], references: [contractorId], onDelete: Cascade)

  @@unique([month, contractorId])
}

model SaveAutomobile {
  id                   String  @id @default(cuid())
  contractorId         String
  workorderId          String?
  vehicleId            String
  date                 String?
  openingMeterReading  Float?
  closingMeterReading  Float?
  startTime            String?
  endTime              String?
  totalRunning         Float?
  totalRunningTime     String?
  hsdIssuedOrConsumed  Float?
  maintenanceDays      Float?
  breakDownDaysCounted Float?
  trips                Float?
  idealStandingDays    Float?
  remarks              String?
  status               Status  @default(Pending)
  rejectionReason      String?

  @@unique([date, contractorId, vehicleId])
}

model Qcs {
  id           String     @id @default(cuid())
  projectId    String
  description  String
  contractorid String
  project      Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  contractor   Contractor @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
  BOQ          QcsBoq[]
}

model QcsBoq {
  id            String        @id @default(cuid())
  itemcode      Int           @unique @default(autoincrement())
  boqId         String
  qcsId         String
  startDate     String
  endDate       String
  description   String
  totalAmount   Float         @default(0)
  totalQuantity Float         @default(0)
  measurements  Measurement[]
  barBendings   BarBending[]
  BOQItems      QcsBoqItem[]

  Qcs Qcs @relation(fields: [qcsId], references: [id], onDelete: Cascade)
}

model QcsBoqItem {
  id               String            @id @default(cuid())
  boqId            String
  description      String
  unit             String
  startDate        String?
  endDate          String?
  unitrate         Float             @default(0)
  totalQuantity    Float             @default(0)
  valueofTotalBill Float             @default(0)
  nos              Int
  length           Float
  breadth          Float
  height           Float?
  quantity         Float
  remarks          String?
  extra            Boolean           @default(false)
  BOQ              QcsBoq            @relation(fields: [boqId], references: [id], onDelete: Cascade)
  measurementItems MeasurementItem[]
  barBendingItems  BarBendingItem[]
}

model BOQ {
  id            String  @id @default(cuid())
  itemcode      Int     @unique @default(autoincrement())
  projectId     String
  boqId         String?
  description   String
  startDate     String
  endDate       String
  totalAmount   Float   @default(0)
  totalQuantity Float   @default(0)
  project       Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  BOQItems BOQItem[]
}

model BOQItem {
  id               String  @id @default(cuid())
  boqId            String
  description      String
  unit             String
  startDate        String?
  endDate          String?
  unitrate         Float   @default(0)
  totalQuantity    Float   @default(0)
  valueofTotalBill Float   @default(0)
  nos              Int
  length           Float
  breadth          Float
  height           Float?
  quantity         Float
  remarks          String?
  extra            Boolean @default(false)
  BOQ              BOQ     @relation(fields: [boqId], references: [id], onDelete: Cascade)
}

model Measurement {
  id               String            @id @default(cuid())
  itemcode         Int               @unique @default(autoincrement())
  projectId        String
  startDate        String
  endDate          String
  boqId            String
  description      String
  contractorid     String
  totalAmount      Float             @default(0)
  totalQuantity    Float             @default(0)
  measurementItems MeasurementItem[]
  BOQ              QcsBoq            @relation(fields: [boqId], references: [id], onDelete: Cascade)
  project          Project           @relation(fields: [projectId], references: [id], onDelete: Cascade)
  contractor       Contractor        @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
}

model MeasurementItem {
  id                   String      @id @default(cuid())
  measurementId        String
  boqItemId            String
  referenceWorkId      String?
  description          String
  unit                 String
  unitrate             Float       @default(0)
  previousBillQuantity Float       @default(0)
  currentBillQuantity  Float       @default(0)
  totalQuantity        Float       @default(0)
  valueofpreviousBill  Float       @default(0)
  valueofcurrentBill   Float       @default(0)
  valueofTotalBill     Float       @default(0)
  nos                  Int
  length               Float
  breadth              Float
  height               Float?
  quantity             Float
  remarks              String?
  boqItem              QcsBoqItem  @relation(fields: [boqItemId], references: [id])
  measurement          Measurement @relation(fields: [measurementId], references: [id], onDelete: Cascade)
}

model BarBending {
  id              String           @id @default(cuid())
  itemcode        Int              @unique @default(autoincrement())
  projectId       String
  startDate       String
  endDate         String
  boqId           String
  description     String
  contractorid    String
  totalAmount     Float            @default(0)
  barbendingItems BarBendingItem[]
  project         Project          @relation(fields: [projectId], references: [id], onDelete: Cascade)
  contractor      Contractor       @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
  boq             QcsBoq           @relation(fields: [boqId], references: [id], onDelete: Cascade)
}

model BarBendingItem {
  id               String     @id @default(cuid())
  barBendingId     String
  boqItemId        String
  description      String
  barmark          String?
  diamark          Int
  noofequipments   Int
  costperequipment Float
  totalcost        Float
  a                Float      @default(0)
  b                Float      @default(0)
  c                Float      @default(0)
  d                Float      @default(0)
  e                Float      @default(0)
  f                Float      @default(0)
  g                Float      @default(0)
  h                Float      @default(0)
  cuttinglength    Float
  totalLength      Float
  unitweight       Float
  totalweight      Float
  remarks          String?
  barBending       BarBending @relation(fields: [barBendingId], references: [id], onDelete: Cascade)
  boqItem          QcsBoqItem @relation(fields: [boqItemId], references: [id])
}

model FixedWork {
  id           String     @id @default(cuid())
  description  String
  contractorid String
  rate         Float      @default(0)
  createdAt    DateTime   @default(now())
  contractor   Contractor @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
}

model HiredFixedWork {
  id           String     @id @default(cuid())
  description  String
  month        String
  contractorid String
  rate         Float      @default(0)
  quantity     Float      @default(0)
  totalAmount  Float      @default(0)
  status       Status     @default(NoChanges)
  createdAt    DateTime   @default(now())
  contractor   Contractor @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
}

model SaveHiredFixedWork {
  id           String     @id @default(cuid())
  description  String
  month        String
  contractorid String
  rate         Float      @default(0)
  quantity     Float      @default(0)
  totalAmount  Float      @default(0)
  status       Status     @default(NoChanges)
  createdAt    DateTime   @default(now())
  contractor   Contractor @relation(fields: [contractorid], references: [contractorId], onDelete: Cascade)
}

model Attendance_Log {
  employeeid     Int
  attendancedate DateTime
  intime         String
  outtime        String
  present        Float
  absent         Float
  begintime      String
  endtime        String
  durationhhmm   String
  overtimehhmm   String
  shiftid        String
  LastUpdatedOn  DateTime

  @@id([employeeid, attendancedate])
}

model Project {
  id          String        @id @default(cuid())
  name        String
  place       String
  type        String
  consultant  String?
  email       String?
  phone       String?
  description String?
  document    String?
  barBending  BarBending[]
  measurement Measurement[]
  BOQ         BOQ[]

  Qcs       Qcs[]
  workorder Workorder[]
}

enum Status {
  Approved
  Pending
  Rejected
  NoChanges
}

enum Role {
  None
  TimeKeeper
  HR
  PlantCommercial
  HoCommercialAuditor
  Corporate
  Admin
  Stores
  Safety
  Automobile
  Civil
  Manager
  Fixed
  GM
  AccountsTaxation
  MTR
}
